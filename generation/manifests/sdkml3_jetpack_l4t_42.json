{
    "information": {
        "schemaUrl": "", 
        "schemaVersion": "1.0", 
        "fileVersion": "0.1", 
        "release": {
            "productCategory": "Jetson", 
            "targetOS": "Linux", 
            "serverType": [
                "DEVZONE"
            ], 
            "id": "", 
            "title": "JetPack 4.2", 
            "releaseVersion": "4.2", 
            "releaseEdition": "", 
            "releaseEditionMessage": "", 
            "releaseBuild": "", 
            "releaseRevision": 0, 
            "minSDKMVer": "0.9.12", 
            "releaseMessage": "", 
            "pidGroupId": "", 
            "targetHW": [
                "P2888", 
                "P3310", 
                "P3489-0000", 
                "P3448-0000"
            ], 
            "operatingSystemsSupport": [
                "ubuntu1604", 
                "ubuntu1804"
            ], 
            "operatingSystemsSupportWarning": [], 
            "estimateTargetDiskSizeInGB": "5.5"
        }, 
        "targetAccessInfo": {
            "user": "nvidia", 
            "password": "nvidia", 
            "host": "192.168.55.1", 
            "port": "22"
        }
    }, 
    "compDirectory": "https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.2/JETPACK_42_b158/", 
    "groups": {
        "NV_CUDA_HOST_GROUP": {
            "id": "NV_CUDA_HOST_GROUP", 
            "name": "CUDA", 
            "groupType": "host", 
            "installedOn": "host", 
            "description": "The CUDA Toolkit provides a comprehensive development environment for C and C++ developers building GPU-accelerated applications.", 
            "versions": [
                {
                    "version": "10.0", 
                    "components": [
                        {
                            "id": "NV_CUDA_HOST_COMP", 
                            "version": "10.0"
                        }, 
                        {
                            "id": "NV_CUDA_HOST_CROSS_COMP", 
                            "version": "10.0"
                        }
                    ]
                }
            ]
        }, 
        "NV_COMPUTERVISION_HOST_GROUP": {
            "id": "NV_COMPUTERVISION_HOST_GROUP", 
            "name": "Computer Vision", 
            "groupType": "host", 
            "installedOn": "host", 
            "description": "OpenCV & NVIDIA VisionWorks Toolkit.", 
            "versions": [
                {
                    "version": "1.6", 
                    "components": [
                        {
                            "id": "NV_OPENCV_HOST_COMP", 
                            "version": "3.3.1"
                        }, 
                        {
                            "id": "NV_VISIONWORKS_HOST_COMP", 
                            "version": "1.6"
                        }
                    ]
                }
            ]
        }, 
        "NV_DEVTOOLS_HOST_GROUP": {
            "id": "NV_DEVTOOLS_HOST_GROUP", 
            "name": "Developer Tools", 
            "groupType": "host", 
            "installedOn": "host", 
            "description": "The NVIDIA Developer Tools are a collection of applications, which allow developers to build, debug, profile, and optimize class-leading and cutting-edge software.", 
            "versions": [
                {
                    "version": "4.2", 
                    "components": [
                        {
                            "id": "NV_NVIDIA_NSIGHT_GRAPHICS_L4T_COMP", 
                            "version": "2018.7"
                        }, 
                        {
                            "id": "NV_NVIDIA_SYSTEM_PROFILER_L4T_COMP", 
                            "version": "2019.3"
                        }, 
                        {
                            "id": "NV_DEVTOOLS_DOCS_L4T_COMP", 
                            "version": "4.2"
                        }
                    ]
                }
            ]
        }, 
        "NV_JETPACK_L4T_IMAGE_SETUP_TARGET_GROUP": {
            "id": "NV_JETPACK_L4T_IMAGE_SETUP_TARGET_GROUP", 
            "name": "Jetson OS image", 
            "groupType": "target_image", 
            "installedOn": "target", 
            "description": "Bootloader and root filesystem with kernel and NVIDIA drivers.", 
            "versions": [
                {
                    "version": "1.1.1", 
                    "components": [
                        {
                            "id": "NV_L4T_FILE_SYSTEM_AND_OS_TX2_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_FILE_SYSTEM_AND_OS_XAVIER_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_FILE_SYSTEM_AND_OS_NANO_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DRIVERS_TX2_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DRIVERS_XAVIER_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DRIVERS_NANO_COMP", 
                            "version": "32.1"
                        }
                    ]
                }
            ]
        }, 
        "NV_DRIVE_FLASH_TARGET_GROUP": {
            "id": "NV_DRIVE_FLASH_TARGET_GROUP", 
            "name": "Flash Jetson OS", 
            "groupType": "flash", 
            "installedOn": "target", 
            "description": "Flash target device.", 
            "flashMessage": "", 
            "versions": [
                {
                    "version": "32.1", 
                    "components": [
                        {
                            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_FLASH", 
                            "version": "1.0"
                        }, 
                        {
                            "id": "NV_L4T_FLASH_TX2_WITH_OS_IMAGE_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_FLASH_TX2I_WITH_OS_IMAGE_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_FLASH_XAVIER_WITH_OS_IMAGE_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_FLASH_NANO_WITH_OS_IMAGE_COMP", 
                            "version": "32.1"
                        }
                    ]
                }
            ]
        }, 
        "NV_ADDITIONAL_SETUP_TARGET_GROUP": {
            "id": "NV_ADDITIONAL_SETUP_TARGET_GROUP", 
            "name": "Additional Setups", 
            "isVisible": false, 
            "groupType": "target", 
            "installedOn": "target", 
            "description": "Some necessary additional setups need to be done before target components install.", 
            "versions": [
                {
                    "version": "1.0", 
                    "components": [
                        {
                            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_TARGET", 
                            "version": "1.0"
                        }, 
                        {
                            "id": "NV_L4T_DATETIME_TARGET_SETUP_COMP", 
                            "version": "1.0"
                        }
                    ]
                }
            ]
        }, 
        "NV_CUDA_TARGET_GROUP": {
            "id": "NV_CUDA_TARGET_GROUP", 
            "name": "CUDA", 
            "groupType": "target", 
            "installedOn": "target", 
            "description": "The CUDA Toolkit provides a comprehensive development environment for C and C++ developers building GPU-accelerated applications.", 
            "versions": [
                {
                    "version": "10.0", 
                    "components": [
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "version": "10.0"
                        }
                    ]
                }
            ]
        }, 
        "NV_AI_TARGET_GROUP": {
            "id": "NV_AI_TARGET_GROUP", 
            "name": "AI", 
            "groupType": "target", 
            "installedOn": "target", 
            "description": "With TensorRT, you can deliver fast inference using INT8 or FP16 optimized precision that significantly reduces latency. The NVIDIA CUDA Deep Neural Network (cuDNN) library provides high-performance GPU acceleration for your application.", 
            "versions": [
                {
                    "version": "5.0", 
                    "components": [
                        {
                            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_TX2_COMP", 
                            "version": "7.3"
                        }, 
                        {
                            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_XAVIER_COMP", 
                            "version": "7.3"
                        }, 
                        {
                            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_NANO_COMP", 
                            "version": "7.3"
                        }, 
                        {
                            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_TX2_COMP", 
                            "version": "5.0"
                        }, 
                        {
                            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_XAVIER_COMP", 
                            "version": "5.0"
                        }, 
                        {
                            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_NANO_COMP", 
                            "version": "5.0"
                        }
                    ]
                }
            ]
        }, 
        "NV_COMPUTERVISION_TARGET_GROUP": {
            "id": "NV_COMPUTERVISION_TARGET_GROUP", 
            "name": "Computer Vision", 
            "groupType": "target", 
            "installedOn": "target", 
            "description": "OpenCV & NVIDIA VisionWorks Toolkit.", 
            "versions": [
                {
                    "version": "1.6", 
                    "components": [
                        {
                            "id": "NV_L4T_OPENCV_TARGET_POST_INSTALL_COMP", 
                            "version": "3.3.1"
                        }, 
                        {
                            "id": "NV_L4T_VISIONWORKS_TARGET_POST_INSTALL_COMP", 
                            "version": "1.6"
                        }
                    ]
                }
            ]
        }, 
        "NV_MULTIMEDIA_API_TARGET_GROUP": {
            "id": "NV_MULTIMEDIA_API_TARGET_GROUP", 
            "name": "Multimedia", 
            "groupType": "target", 
            "installedOn": "target", 
            "description": "The Jetson Multimedia API package is a collection of lower-level APIs that support flexible application development.  The GStreamer framework is also included, providing high-level APIs.", 
            "versions": [
                {
                    "version": "1.1.1", 
                    "components": [
                        {
                            "id": "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_TX2_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_XAVIER_COMP", 
                            "version": "32.1"
                        }, 
                        {
                            "id": "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_NANO_COMP", 
                            "version": "32.1"
                        }
                    ]
                }
            ]
        }
    }, 
    "components": {
        "NV_CUDA_HOST_COMP": {
            "id": "NV_CUDA_HOST_COMP", 
            "name": "CUDA on Host", 
            "description": "CUDA to be installed on host. CUDA is a parallel computing platform and programming model invented by NVIDIA. It enables dramatic increases in computing performance by harnessing the power of the graphics processing unit (GPU).", 
            "compType": "host", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_CUDA_EULA", 
            "isDetectableInstall": true, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "10.0", 
                    "operatingSystems": [
                        "ubuntu1604"
                    ], 
                    "installSizeMB": 4891, 
                    "downloadFiles": [
                        {
                            "url": "ubuntu1604/cuda-repo-ubuntu1604-10-0-local-10.0.166-410.62_1.0-1_amd64.deb", 
                            "fileName": "cuda-repo-ubuntu1604-10-0-local-10.0.166-410.62_1.0-1_amd64.deb", 
                            "size": 1509056140, 
                            "checksum": "ae9eb96f288847ce993dbfc109fa4790", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb_repo", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "cuda-toolkit-10-0", 
                                            "version": "10.0"
                                        }
                                    ], 
                                    "aptSwitch": "--allow-downgrades", 
                                    "postUninstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get -y purge cuda-license-10-0"
                                        }, 
                                        {
                                            "userCommand": "sudo apt-get -y purge cuda-repo-ubuntu1604-10-0-local*"
                                        }, 
                                        {
                                            "userCommand": "sudo apt-key del $(apt-key list | grep cudatools -B 1| grep 'pub' | cut -d ' ' -f 4 | cut -d/ -f 2)"
                                        }, 
                                        {
                                            "userCommand": "sudo rm -rf /usr/local/cuda-10.0"
                                        }, 
                                        {
                                            "userCommand": "sudo rm -rf /usr/share/doc/cuda*10-0"
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }, 
                {
                    "version": "10.0", 
                    "operatingSystems": [
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 4891, 
                    "downloadFiles": [
                        {
                            "url": "ubuntu1804/cuda-repo-ubuntu1804-10-0-local-10.0.166-410.62_1.0-1_amd64.deb", 
                            "fileName": "cuda-repo-ubuntu1804-10-0-local-10.0.166-410.62_1.0-1_amd64.deb", 
                            "size": 1470508588, 
                            "checksum": "dd2cfc03503ea3ed45d1d2bdf51c3d16", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb_repo", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "cuda-toolkit-10-0", 
                                            "version": "10.0"
                                        }
                                    ], 
                                    "aptSwitch": "--allow-downgrades", 
                                    "postUninstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get -y purge cuda-license-10-0"
                                        }, 
                                        {
                                            "userCommand": "sudo apt-get -y purge cuda-repo-ubuntu1804-10-0-local*"
                                        }, 
                                        {
                                            "userCommand": "sudo apt-key del $(apt-key list | grep cudatools -B 1| grep 'pub' | cut -d ' ' -f 4 | cut -d/ -f 2)"
                                        }, 
                                        {
                                            "userCommand": "sudo rm -rf /usr/local/cuda-10.0"
                                        }, 
                                        {
                                            "userCommand": "sudo rm -rf /usr/share/doc/cuda*10-0"
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_CUDA_HOST_CROSS_COMP": {
            "id": "NV_CUDA_HOST_CROSS_COMP", 
            "name": "CUDA Cross Compile Package on Host", 
            "description": "CUDA Toolkit on Host for Cross Compiling. NVIDIA CUDA Toolkit provides a comprehensive development environment for C and C++ developers building GPU-accelerated applications.", 
            "compType": "host", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_CUDA_EULA", 
            "isDetectableInstall": true, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "10.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 385, 
                    "downloadFiles": [
                        {
                            "url": "/cuda-repo-cross-aarch64-10-0-local-10.0.166_1.0-1_all.deb", 
                            "fileName": "cuda-repo-cross-aarch64-10-0-local-10.0.166_1.0-1_all.deb", 
                            "size": 385142340, 
                            "checksum": "6fb7ba26db83dabfd3cf75280e7bf23f", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb_repo", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "cuda-cross-aarch64-10-0", 
                                            "version": "10.0"
                                        }
                                    ], 
                                    "postUninstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get -y purge 'cuda-repo-cross.*10-0.*'"
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_CUDA_HOST_COMP", 
                            "operator": "==", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_OPENCV_HOST_COMP": {
            "id": "NV_OPENCV_HOST_COMP", 
            "name": "OpenCV on Host", 
            "description": "OpenCV for Host", 
            "compType": "host", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_VISIONWORKS_OPENCV_EULA", 
            "isDetectableInstall": true, 
            "isInstallPathCustomizable": false, 
            "versions": [
                {
                    "version": "3.3.1", 
                    "operatingSystems": [
                        "ubuntu1604"
                    ], 
                    "installSizeMB": 158, 
                    "downloadFiles": [
                        {
                            "url": "ubuntu1604/libopencv_3.3.1-2-gd6a8916_amd64.deb", 
                            "fileName": "libopencv_3.3.1-2-gd6a8916_amd64.deb", 
                            "size": 27803078, 
                            "checksum": "082e1a8b955254fdce564156473df7f6", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv", 
                                            "version": "3.3.1"
                                        }
                                    ], 
                                    "preInstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get install -y libtbb-dev"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "ubuntu1604/libopencv-dev_3.3.1-2-gd6a8916_amd64.deb", 
                            "fileName": "libopencv-dev_3.3.1-2-gd6a8916_amd64.deb", 
                            "size": 1141296, 
                            "checksum": "547ceeb0b2524b8bedda721beae6074b", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv-dev", 
                                            "version": "3.3.1"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "ubuntu1604/libopencv-python_3.3.1-2-gd6a8916_amd64.deb", 
                            "fileName": "libopencv-python_3.3.1-2-gd6a8916_amd64.deb", 
                            "size": 1721754, 
                            "checksum": "5c32eb2e6f61022f4c82af7fb4191a5b", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv-python", 
                                            "version": "3.3.1"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "ubuntu1604/libopencv-samples_3.3.1-2-gd6a8916_amd64.deb", 
                            "fileName": "libopencv-samples_3.3.1-2-gd6a8916_amd64.deb", 
                            "size": 182168, 
                            "checksum": "e0db7debc130b06c7099c8a2497c3bc1", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv-samples", 
                                            "version": "3.3.1"
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_CUDA_HOST_COMP", 
                            "operator": "==", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }, 
                {
                    "version": "3.3.1", 
                    "operatingSystems": [
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 158, 
                    "downloadFiles": [
                        {
                            "url": "ubuntu1804/libopencv_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "fileName": "libopencv_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "size": 27931360, 
                            "checksum": "2d18d8302eaed34811f295852bc4e2ac", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv", 
                                            "version": "3.3.1"
                                        }
                                    ], 
                                    "preInstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get install -y libtbb-dev"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "ubuntu1804/libopencv-dev_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "fileName": "libopencv-dev_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "size": 1118974, 
                            "checksum": "d37cf9dde6cb71cf3a890cb204722cee", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv-dev", 
                                            "version": "3.3.1"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "ubuntu1804/libopencv-python_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "fileName": "libopencv-python_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "size": 1653492, 
                            "checksum": "fa005f1c1b4a219bf75f561ce3668831", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv-python", 
                                            "version": "3.3.1"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "ubuntu1804/libopencv-samples_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "fileName": "libopencv-samples_3.3.1-2-gb3f86dcd5_amd64.deb", 
                            "size": 184036, 
                            "checksum": "8491b3ef09743f3ec040f6a41faeaa82", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "libopencv-samples", 
                                            "version": "3.3.1"
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_CUDA_HOST_COMP", 
                            "operator": "==", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_VISIONWORKS_HOST_COMP": {
            "id": "NV_VISIONWORKS_HOST_COMP", 
            "name": "VisionWorks on Host", 
            "description": "NVIDIA VisionWorks Toolkit is a CUDA accelerated software development package for computer vision (CV) and image processing. The toolkit is designed to provide a production-quality, standard interface that implements and extends the OpenVX standard, enabling high performance computer vision applications on NVIDIA Tegra devices.", 
            "compType": "host", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_VISIONWORKS_OPENCV_EULA", 
            "isDetectableInstall": true, 
            "isInstallPathCustomizable": false, 
            "versions": [
                {
                    "version": "1.6", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 233, 
                    "downloadFiles": [
                        {
                            "url": "/libvisionworks-repo_1.6.0.500n_amd64.deb", 
                            "fileName": "libvisionworks-repo_1.6.0.500n_amd64.deb", 
                            "size": 66561472, 
                            "checksum": "0010b26df538773f37cedd6241535fef", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb_repo", 
                                "additionalParameters": {
                                    "repoPackageInfo": {
                                        "name": "libvisionworks-repo", 
                                        "version": "1.6", 
                                        "keyFile": "GPGKEY"
                                    }, 
                                    "packagesInfo": [
                                        {
                                            "name": "libvisionworks", 
                                            "version": "1.6"
                                        }, 
                                        {
                                            "name": "libvisionworks-dev", 
                                            "version": "1.6"
                                        }, 
                                        {
                                            "name": "libvisionworks-samples", 
                                            "version": "1.6"
                                        }
                                    ], 
                                    "postUninstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get -y purge libvisionworks-repo"
                                        }, 
                                        {
                                            "userCommand": "sudo apt-key del $(apt-key list | grep visionworks -B 1| grep 'pub' | cut -d ' ' -f 4 | cut -d/ -f 2)"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/libvisionworks-sfm-repo_0.90.4_amd64.deb", 
                            "fileName": "libvisionworks-sfm-repo_0.90.4_amd64.deb", 
                            "size": 20597586, 
                            "checksum": "88c0eda975df93c7c78e53faab31973f", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb_repo", 
                                "additionalParameters": {
                                    "repoPackageInfo": {
                                        "name": "libvisionworks-sfm-repo", 
                                        "version": "0.90", 
                                        "keyFile": "GPGKEY"
                                    }, 
                                    "packagesInfo": [
                                        {
                                            "name": "libvisionworks-sfm", 
                                            "version": "0.90"
                                        }, 
                                        {
                                            "name": "libvisionworks-sfm-dev", 
                                            "version": "0.90"
                                        }
                                    ], 
                                    "postUninstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get -y purge libvisionworks-sfm-repo"
                                        }, 
                                        {
                                            "userCommand": "sudo apt-key del $(apt-key list | grep visionworks -B 1| grep 'pub' | cut -d ' ' -f 4 | cut -d/ -f 2)"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/libvisionworks-tracking-repo_0.88.2_amd64.deb", 
                            "fileName": "libvisionworks-tracking-repo_0.88.2_amd64.deb", 
                            "size": 13113238, 
                            "checksum": "a2e80ba3ab1d876c337fa107758dd15d", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb_repo", 
                                "additionalParameters": {
                                    "repoPackageInfo": {
                                        "name": "libvisionworks-tracking-repo", 
                                        "version": "0.88", 
                                        "keyFile": "GPGKEY"
                                    }, 
                                    "packagesInfo": [
                                        {
                                            "name": "libvisionworks-tracking", 
                                            "version": "0.88"
                                        }, 
                                        {
                                            "name": "libvisionworks-tracking-dev", 
                                            "version": "0.88"
                                        }
                                    ], 
                                    "postUninstallCommands": [
                                        {
                                            "userCommand": "sudo apt-get -y purge libvisionworks-tracking-repo"
                                        }, 
                                        {
                                            "userCommand": "sudo apt-key del $(apt-key list | grep visionworks -B 1| grep 'pub' | cut -d ' ' -f 4 | cut -d/ -f 2)"
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/NVIDIA_VisionWorks_References.zip", 
                            "fileName": "NVIDIA_VisionWorks_References.zip", 
                            "size": 5350765, 
                            "checksum": "fe8197f368f7edf37cd3f35b75a92584", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "zip", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}/documentations/VisionWorks/"
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_OPENCV_HOST_COMP", 
                            "operator": "==", 
                            "ver": "3.3.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_NVIDIA_NSIGHT_GRAPHICS_L4T_COMP": {
            "id": "NV_NVIDIA_NSIGHT_GRAPHICS_L4T_COMP", 
            "name": "NVIDIA Nsight Graphics", 
            "description": "NVIDIA Nsight Graphics is a console-grade tool that allows developers to debug and profile OpenGL/GL ES applications.", 
            "compType": "host", 
            "isVisible": true, 
            "licenseId": "NV_COMMON_EULA", 
            "isDetectableInstall": true, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "2018.7", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 823.83, 
                    "downloadFiles": [
                        {
                            "url": "/NVIDIA_Nsight_Graphics_2018.7.L4T.25921359.deb", 
                            "fileName": "NVIDIA_Nsight_Graphics_2018.7.L4T.25921359.deb", 
                            "size": 163514098, 
                            "checksum": "536ac7cd9003b0eb3fd6cea2d512cda4", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "nsight-graphics-for-l4t", 
                                            "version": "2018.7"
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_NVIDIA_SYSTEM_PROFILER_L4T_COMP": {
            "id": "NV_NVIDIA_SYSTEM_PROFILER_L4T_COMP", 
            "name": "NVIDIA Nsight Systems", 
            "description": "NVIDIA Nsight Systems is a multi-core CPU sampling profiler that provides an interactive view of captured profiling data, helping improve overall application performance.", 
            "compType": "host", 
            "isVisible": true, 
            "licenseId": "NV_COMMON_EULA", 
            "isDetectableInstall": true, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "2019.3", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 365, 
                    "downloadFiles": [
                        {
                            "url": "/NsightSystems-linux-public-2019.3.2.12-510a942.deb", 
                            "fileName": "NsightSystems-linux-public-2019.3.2.12-510a942.deb", 
                            "size": 116420568, 
                            "checksum": "ace08a9bb1bbd9fc728a0213d9cab9e2", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "deb", 
                                "additionalParameters": {
                                    "packagesInfo": [
                                        {
                                            "name": "nsightsystems-2019.3.2", 
                                            "version": "2019.3.2"
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_DEVTOOLS_DOCS_L4T_COMP": {
            "id": "NV_DEVTOOLS_DOCS_L4T_COMP", 
            "name": "DevTools Documentation", 
            "description": "Documentation for NVIDIA Nsight Systems and Tegra Graphics", 
            "compType": "host", 
            "isVisible": true, 
            "licenseId": "NV_COMMON_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "4.2", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 29.98, 
                    "downloadFiles": [
                        {
                            "url": "/devtools_docs.zip", 
                            "fileName": "devtools_docs.zip", 
                            "size": 25538902, 
                            "checksum": "3f60043f552e38e279d935b64b5365ee", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "zip", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}/documentations/devtools/"
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_DRIVERS_TX2_COMP": {
            "id": "NV_L4T_DRIVERS_TX2_COMP", 
            "name": "Drivers for Jetson TX2 & TX2i", 
            "description": "NVIDIA Tegra Linux Driver Package", 
            "compType": "target_image", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 156, 
                    "downloadFiles": [
                        {
                            "url": "P3310/Jetson_Linux_R32.1.0_aarch64.tbz2", 
                            "fileName": "Jetson_Linux_R32.1.0_aarch64.tbz2", 
                            "size": 125799502, 
                            "checksum": "881fedee06a7446953a064b574227980", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}", 
                                    "installCommands": [
                                        {
                                            "execBash": [
                                                "sudo apt-get update || true; sudo apt-get install -y pigz lbzip2", 
                                                "tar xpf {{FILE_PATH}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_DRIVERS_XAVIER_COMP": {
            "id": "NV_L4T_DRIVERS_XAVIER_COMP", 
            "name": "Drivers for Jetson AGX", 
            "description": "NVIDIA Tegra Linux Driver Package", 
            "compType": "target_image", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 156, 
                    "downloadFiles": [
                        {
                            "url": "P2888/Jetson_Linux_R32.1.0_aarch64.tbz2", 
                            "fileName": "Jetson_Linux_R32.1.0_aarch64.tbz2", 
                            "size": 125799502, 
                            "checksum": "881fedee06a7446953a064b574227980", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}", 
                                    "installCommands": [
                                        {
                                            "execBash": [
                                                "sudo apt-get update || true; sudo apt-get install -y pigz lbzip2", 
                                                "tar xpf {{FILE_PATH}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P2888"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_DRIVERS_NANO_COMP": {
            "id": "NV_L4T_DRIVERS_NANO_COMP", 
            "name": "Drivers for Jetson Nano", 
            "description": "NVIDIA Tegra Linux Driver Package", 
            "compType": "target_image", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 156, 
                    "downloadFiles": [
                        {
                            "url": "P3448-0000/Jetson-210_Linux_R32.1.0_aarch64.tbz2", 
                            "fileName": "Jetson-210_Linux_R32.1.0_aarch64.tbz2", 
                            "size": 114033542, 
                            "checksum": "15fda16d83e9a189ea5534108f57af2f", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}", 
                                    "installCommands": [
                                        {
                                            "execBash": [
                                                "sudo apt-get update || true; sudo apt-get install -y pigz lbzip2", 
                                                "tar xpf {{FILE_PATH}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3448-0000"
                    ], 
                    "dependencies": [], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_FILE_SYSTEM_AND_OS_TX2_COMP": {
            "id": "NV_L4T_FILE_SYSTEM_AND_OS_TX2_COMP", 
            "name": "File System and OS", 
            "description": "File System", 
            "compType": "target_image", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 3284, 
                    "downloadFiles": [
                        {
                            "url": "P3310/Tegra_Linux_Sample-Root-Filesystem_R32.1.0_aarch64.tbz2", 
                            "fileName": "Tegra_Linux_Sample-Root-Filesystem_R32.1.0_aarch64.tbz2", 
                            "size": 1221063400, 
                            "checksum": "85d4b821a2c1b7eb640e4728d978b89d", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}/Linux_for_Tegra/rootfs/", 
                                    "installCommands": [
                                        {
                                            "execBash": [
                                                "sudo tar xpf {{FILE_PATH}}", 
                                                "cd ..", 
                                                "sudo ./apply_binaries.sh", 
                                                "sudo mkdir -p rootfs/opt/nvidia/deb_repos"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_DRIVERS_TX2_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_FILE_SYSTEM_AND_OS_XAVIER_COMP": {
            "id": "NV_L4T_FILE_SYSTEM_AND_OS_XAVIER_COMP", 
            "name": "File System and OS", 
            "description": "File System", 
            "compType": "target_image", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 3284, 
                    "downloadFiles": [
                        {
                            "url": "P2888/Tegra_Linux_Sample-Root-Filesystem_R32.1.0_aarch64.tbz2", 
                            "fileName": "Tegra_Linux_Sample-Root-Filesystem_R32.1.0_aarch64.tbz2", 
                            "size": 1221063400, 
                            "checksum": "85d4b821a2c1b7eb640e4728d978b89d", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}/Linux_for_Tegra/rootfs/", 
                                    "installCommands": [
                                        {
                                            "execBash": [
                                                "sudo tar xpf {{FILE_PATH}}", 
                                                "cd ..", 
                                                "sudo ./apply_binaries.sh", 
                                                "sudo mkdir -p rootfs/opt/nvidia/deb_repos"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P2888"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_DRIVERS_XAVIER_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_FILE_SYSTEM_AND_OS_NANO_COMP": {
            "id": "NV_L4T_FILE_SYSTEM_AND_OS_NANO_COMP", 
            "name": "File System and OS", 
            "description": "File System", 
            "compType": "target_image", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 3284, 
                    "downloadFiles": [
                        {
                            "url": "P3448-0000/Tegra_Linux_Sample-Root-Filesystem_R32.1.0_aarch64.tbz2", 
                            "fileName": "Tegra_Linux_Sample-Root-Filesystem_R32.1.0_aarch64.tbz2", 
                            "size": 1221063400, 
                            "checksum": "85d4b821a2c1b7eb640e4728d978b89d", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}/Linux_for_Tegra/rootfs/", 
                                    "installCommands": [
                                        {
                                            "execBash": [
                                                "sudo tar xpf {{FILE_PATH}}", 
                                                "cd ..", 
                                                "sudo ./apply_binaries.sh", 
                                                "sudo mkdir -p rootfs/opt/nvidia/deb_repos"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_DRIVERS_NANO_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_FLASH_TX2_WITH_OS_IMAGE_COMP": {
            "id": "NV_L4T_FLASH_TX2_WITH_OS_IMAGE_COMP", 
            "name": "Flash Jetson TX2", 
            "description": "Flash Jetson TX2", 
            "compType": "flash", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "timeoutSeconds": 3600, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 30053, 
                    "downloadFiles": [], 
                    "installParameters": {
                        "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}/Linux_for_Tegra", 
                        "installCommands": [
                            {
                                "remoteExecBash": [
                                    "sudo reboot forced-recovery"
                                ], 
                                "ignoreError": true
                            }, 
                            {
                                "comment": "wait for device to shutdown and to go to recovery mode", 
                                "userCommand": "sleep 20"
                            }, 
                            {
                                "userCommand": "sudo ./flash.sh jetson-tx2 mmcblk0p1"
                            }, 
                            {
                                "userCommand": "sleep 10"
                            }
                        ]
                    }, 
                    "targetIds": [
                        "P3310"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_FILE_SYSTEM_AND_OS_TX2_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DRIVERS_TX2_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_FLASH", 
                            "operator": "==", 
                            "ver": "1.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_FLASH_TX2I_WITH_OS_IMAGE_COMP": {
            "id": "NV_L4T_FLASH_TX2I_WITH_OS_IMAGE_COMP", 
            "name": "Flash Jetson TX2i", 
            "description": "Flash Jetson TX2i", 
            "compType": "flash", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "timeoutSeconds": 3600, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 30053, 
                    "downloadFiles": [], 
                    "installParameters": {
                        "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}/Linux_for_Tegra", 
                        "installCommands": [
                            {
                                "remoteExecBash": [
                                    "sudo reboot forced-recovery"
                                ], 
                                "ignoreError": true
                            }, 
                            {
                                "comment": "wait for device to shutdown and to go to recovery mode", 
                                "userCommand": "sleep 20"
                            }, 
                            {
                                "userCommand": "sudo ./flash.sh jetson-tx2i mmcblk0p1"
                            }, 
                            {
                                "userCommand": "sleep 10"
                            }
                        ]
                    }, 
                    "targetIds": [
                        "P3489-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_FILE_SYSTEM_AND_OS_TX2_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DRIVERS_TX2_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_FLASH", 
                            "operator": "==", 
                            "ver": "1.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_FLASH_XAVIER_WITH_OS_IMAGE_COMP": {
            "id": "NV_L4T_FLASH_XAVIER_WITH_OS_IMAGE_COMP", 
            "name": "Flash Jetson AGX Xavier", 
            "description": "Flash Jetson AGX", 
            "compType": "flash", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "timeoutSeconds": 3600, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 30053, 
                    "downloadFiles": [], 
                    "installParameters": {
                        "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}/Linux_for_Tegra", 
                        "installCommands": [
                            {
                                "remoteExecBash": [
                                    "sudo reboot forced-recovery"
                                ], 
                                "ignoreError": true
                            }, 
                            {
                                "comment": "wait for device to shutdown and to go to recovery mode", 
                                "userCommand": "sleep 20"
                            }, 
                            {
                                "userCommand": "sudo ./flash.sh jetson-xavier mmcblk0p1"
                            }, 
                            {
                                "userCommand": "sleep 10"
                            }
                        ]
                    }, 
                    "targetIds": [
                        "P2888"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_FILE_SYSTEM_AND_OS_XAVIER_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DRIVERS_XAVIER_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_FLASH", 
                            "operator": "==", 
                            "ver": "1.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_FLASH_NANO_WITH_OS_IMAGE_COMP": {
            "id": "NV_L4T_FLASH_NANO_WITH_OS_IMAGE_COMP", 
            "name": "Flash Jetson Nano", 
            "description": "Flash Jetson Nano", 
            "compType": "flash", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "timeoutSeconds": 3600, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 30053, 
                    "downloadFiles": [], 
                    "installParameters": {
                        "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}/Linux_for_Tegra", 
                        "installCommands": [
                            {
                                "remoteExecBash": [
                                    "sudo reboot forced-recovery"
                                ], 
                                "ignoreError": true
                            }, 
                            {
                                "comment": "wait for device to shutdown and to go to recovery mode", 
                                "userCommand": "sleep 20"
                            }, 
                            {
                                "userCommand": "sudo ./flash.sh jetson-nano-qspi-sd mmcblk0p1"
                            }, 
                            {
                                "userCommand": "sleep 10"
                            }
                        ]
                    }, 
                    "targetIds": [
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_FILE_SYSTEM_AND_OS_NANO_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DRIVERS_NANO_COMP", 
                            "operator": "==", 
                            "ver": "32.1"
                        }, 
                        {
                            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_FLASH", 
                            "operator": "==", 
                            "ver": "1.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_FLASH": {
            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_FLASH", 
            "name": "Device Mode Host Setup in Flash", 
            "description": "Setups for device mode host part in L4T  before flashing, to let the target can access host internet.", 
            "compType": "flash", 
            "isVisible": false, 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "1.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [], 
                    "installParameters": {
                        "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}", 
                        "installCommands": [
                            {
                                "execBash": [
                                    "set +e", 
                                    "eth_port_name=$(ip route show default | awk '/default via/ {print $5; exit}')", 
                                    "if [[ $eth_port_name == '' ]]; then", 
                                    "   echo 'Can not found route default $eth_port_name, device mode setup failed!'", 
                                    "   exit 0", 
                                    "fi", 
                                    "echo 'Found route default' $eth_port_name', setting up device mode'", 
                                    "setup_t='192.168.55.0/24'", 
                                    "sudo iptables -t nat -A POSTROUTING -s $setup_t -o $eth_port_name -j MASQUERADE", 
                                    "sudo iptables -A FORWARD -s $setup_t -o $eth_port_name -j ACCEPT", 
                                    "sudo iptables -A FORWARD -d $setup_t -m state --state ESTABLISHED,RELATED -i $eth_port_name -j ACCEPT", 
                                    "sudo sysctl -w net.ipv4.ip_forward=1", 
                                    "check_google_dns=$(dig @8.8.8.8 nvidia.com || true)", 
                                    "if [[ $check_google_dns == *'Got answer'* ]]; then", 
                                    "   echo 'Device mode on host successfuly set with DNS 8.8.8.8!'", 
                                    "   exit 0", 
                                    "else", 
                                    "   echo 'Default google DNS is not working, trying to find a valid server in local host settings!'", 
                                    "   dns_list=$(nmcli -t device show $eth_port_name | grep 'DNS' | grep -o '[^:]*$')", 
                                    "   for dns in $dns_list; do ", 
                                    "       check_dns=$(dig @$dns nvidia.com || true)", 
                                    "       if [[ $check_dns == *'Got answer'* ]]; then", 
                                    "           sudo iptables -t nat -A PREROUTING -p tcp -d 8.8.8.8 --dport 53 -j DNAT --to-destination $dns", 
                                    "           sudo iptables -t nat -A PREROUTING -p udp -d 8.8.8.8 --dport 53 -j DNAT --to-destination $dns", 
                                    "           echo 'Device mode on host successfuly set with DNS' $dns'!'", 
                                    "           exit 0", 
                                    "       fi", 
                                    "   done", 
                                    "   echo 'Can not found a valid DNS server, device mode setup failed!'", 
                                    "   echo 'If needed to use device mode, please change the target default dns to a valid server by following the steps in release note.'", 
                                    "   exit 0", 
                                    "fi"
                                ]
                            }
                        ]
                    }, 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": {}, 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_TARGET": {
            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_TARGET", 
            "name": "Device Mode Host Setup in Target SDK", 
            "description": "Setups for device mode host part in L4T  before install target components, to let the target can access host internet.", 
            "compType": "target", 
            "isVisible": false, 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "1.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [], 
                    "installParameters": {
                        "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}", 
                        "installCommands": [
                            {
                                "execBash": [
                                    "set +e", 
                                    "eth_port_name=$(ip route show default | awk '/default via/ {print $5; exit}')", 
                                    "if [[ $eth_port_name == '' ]]; then", 
                                    "   echo 'Can not found route default $eth_port_name, device mode setup failed!'", 
                                    "   exit 0", 
                                    "fi", 
                                    "echo 'Found route default' $eth_port_name', setting up device mode'", 
                                    "setup_t='192.168.55.0/24'", 
                                    "sudo iptables -t nat -A POSTROUTING -s $setup_t -o $eth_port_name -j MASQUERADE", 
                                    "sudo iptables -A FORWARD -s $setup_t -o $eth_port_name -j ACCEPT", 
                                    "sudo iptables -A FORWARD -d $setup_t -m state --state ESTABLISHED,RELATED -i $eth_port_name -j ACCEPT", 
                                    "sudo sysctl -w net.ipv4.ip_forward=1", 
                                    "check_google_dns=$(dig @8.8.8.8 nvidia.com || true)", 
                                    "if [[ $check_google_dns == *'Got answer'* ]]; then", 
                                    "   echo 'Device mode on host successfuly set with DNS 8.8.8.8!'", 
                                    "   exit 0", 
                                    "else", 
                                    "   echo 'Default google DNS is not working, trying to find a valid server in local host settings!'", 
                                    "   dns_list=$(nmcli -t device show $eth_port_name | grep 'DNS' | grep -o '[^:]*$')", 
                                    "   for dns in $dns_list; do ", 
                                    "       check_dns=$(dig @$dns nvidia.com || true)", 
                                    "       if [[ $check_dns == *'Got answer'* ]]; then", 
                                    "           sudo iptables -t nat -A PREROUTING -p tcp -d 8.8.8.8 --dport 53 -j DNAT --to-destination $dns", 
                                    "           sudo iptables -t nat -A PREROUTING -p udp -d 8.8.8.8 --dport 53 -j DNAT --to-destination $dns", 
                                    "           echo 'Device mode on host successfuly set with DNS' $dns'!'", 
                                    "           exit 0", 
                                    "       fi", 
                                    "   done", 
                                    "   echo 'Can not found a valid DNS server, device mode setup failed!'", 
                                    "   echo 'If needed to use device mode, please change the target default dns to a valid server by following the steps in release note.'", 
                                    "   exit 0", 
                                    "fi"
                                ]
                            }
                        ]
                    }, 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": {}, 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_DATETIME_TARGET_SETUP_COMP": {
            "id": "NV_L4T_DATETIME_TARGET_SETUP_COMP", 
            "name": "DateTime Target Setup", 
            "description": "Setup target DateTime to match host DateTime, to avoid the target DateTime mess for new devices or after devices RTC battery dried.", 
            "compType": "target", 
            "isVisible": false, 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "1.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [], 
                    "installParameters": {
                        "installDir": "{{TARGET_ROOT}}/{{BUNDLE_TITLE}}_{{BOARD_ID}}", 
                        "installCommands": [
                            {
                                "execBash": [
                                    "set +e", 
                                    "host_datetime=$(date -u)", 
                                    "ssh -t -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no {{TARGET_USERNAME}}@{{TARGET_IP}} \"sudo date -u -s '$host_datetime'\""
                                ]
                            }
                        ]
                    }, 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_DEVICE_MODE_SETUP_COMP_IN_TARGET", 
                            "operator": "==", 
                            "ver": "1.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP": {
            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
            "name": "CUDA Toolkit for L4T", 
            "description": "CUDA to be installed on target. CUDA is a parallel computing platform and programming model invented by NVIDIA. It enables dramatic increases in computing performance by harnessing the power of the graphics processing unit (GPU).", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_CUDA_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "10.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "/cuda-repo-l4t-10-0-local-10.0.166_1.0-1_arm64.deb", 
                            "fileName": "cuda-repo-l4t-10-0-local-10.0.166_1.0-1_arm64.deb", 
                            "size": 887219344, 
                            "checksum": "5e3eedc3707305f9022d41754d6becde", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sleep 5", 
                                                "safe_apt_install \"sudo apt-key add /var/cuda-repo-*-local*/*.pub\" 5", 
                                                "sleep 2", 
                                                "safe_apt_install \"sudo apt-get -y update\" 5", 
                                                "safe_apt_install \"sudo apt-get install -y gnupg\" 5", 
                                                "safe_apt_install \"sudo apt-get -y --allow-downgrades install cuda-toolkit-10-0 libgomp1 libfreeimage-dev libopenmpi-dev openmpi-bin\" 5", 
                                                "grep -q 'export PATH=.*/usr/local/cuda-10.0/bin' ~/.bashrc || echo 'export PATH=/usr/local/cuda-10.0/bin:$PATH'>>~/.bashrc", 
                                                "grep -q 'export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64' ~/.bashrc || echo 'export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64:$LD_LIBRARY_PATH' >> ~/.bashrc", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_DATETIME_TARGET_SETUP_COMP", 
                            "operator": "==", 
                            "ver": "1.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_OPENCV_TARGET_POST_INSTALL_COMP": {
            "id": "NV_L4T_OPENCV_TARGET_POST_INSTALL_COMP", 
            "name": "OpenCV on Target", 
            "description": "OpenCV for Jetson.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_VISIONWORKS_OPENCV_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "3.3.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "/libopencv_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "fileName": "libopencv_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "size": 8882498, 
                            "checksum": "dd5b571c08a0098141203daec2ea1acc", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo apt-get update \" 5", 
                                                "safe_apt_install \"sudo apt-get install -y libtbb2 libtbb-dev\" 5", 
                                                "safe_apt_install \"sudo apt-get install -y python-dev python-numpy python-py python-pytest\" 5", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/libopencv-dev_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "fileName": "libopencv-dev_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "size": 1103544, 
                            "checksum": "d29571f888a59dd290da2650dc202623", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/libopencv-python_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "fileName": "libopencv-python_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "size": 1559580, 
                            "checksum": "35776ce159afa78a0fe727d4a3c5b6fa", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/libopencv-samples_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "fileName": "libopencv-samples_3.3.1-2-g31ccdfe11_arm64.deb", 
                            "size": 185418, 
                            "checksum": "4f28a7792425b5e1470d5aa73c2a470d", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "operator": "==", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_CUDNN_TARGET_POST_INSTALL_TX2_COMP": {
            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_TX2_COMP", 
            "name": "cuDNN on Target", 
            "description": "The NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks. Deep learning developers and researchers worldwide rely on the highly optimized routines in cuDNN which allow them to focus on designing and training neural network models rather than spending time on low-level performance tuning.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_CUDNN_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "7.3", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P3310/libcudnn7_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 143234240, 
                            "checksum": "92867c0a495f84ec11d108f84b776620", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/libcudnn7-dev_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7-dev_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 131441072, 
                            "checksum": "dd0fbfa225b2374b946febc98e2cdec4", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/libcudnn7-doc_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7-doc_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 6834188, 
                            "checksum": "9478c16ceeaaca937d4d26b982e48bd1", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "operator": ">=", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_CUDNN_TARGET_POST_INSTALL_XAVIER_COMP": {
            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_XAVIER_COMP", 
            "name": "cuDNN on Target", 
            "description": "The NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks. Deep learning developers and researchers worldwide rely on the highly optimized routines in cuDNN which allow them to focus on designing and training neural network models rather than spending time on low-level performance tuning.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_CUDNN_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "7.3", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P2888/libcudnn7_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 143234240, 
                            "checksum": "92867c0a495f84ec11d108f84b776620", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/libcudnn7-dev_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7-dev_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 131441072, 
                            "checksum": "dd0fbfa225b2374b946febc98e2cdec4", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/libcudnn7-doc_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7-doc_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 6834188, 
                            "checksum": "9478c16ceeaaca937d4d26b982e48bd1", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P2888"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "operator": ">=", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_CUDNN_TARGET_POST_INSTALL_NANO_COMP": {
            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_NANO_COMP", 
            "name": "cuDNN on Target", 
            "description": "The NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks. Deep learning developers and researchers worldwide rely on the highly optimized routines in cuDNN which allow them to focus on designing and training neural network models rather than spending time on low-level performance tuning.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_CUDNN_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "7.3", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P3448-0000/libcudnn7_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 143234240, 
                            "checksum": "92867c0a495f84ec11d108f84b776620", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/libcudnn7-dev_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7-dev_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 131441072, 
                            "checksum": "dd0fbfa225b2374b946febc98e2cdec4", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/libcudnn7-doc_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "fileName": "libcudnn7-doc_7.3.1.28-1+cuda10.0_arm64.deb", 
                            "size": 6834188, 
                            "checksum": "9478c16ceeaaca937d4d26b982e48bd1", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "operator": ">=", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_TENSORRT_TARGET_POST_INSTALL_TX2_COMP": {
            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_TX2_COMP", 
            "name": "TensorRT on Target", 
            "description": "NVIDIA TensorRT is a high-performance deep learning inference for production deployment of deep learning applications. It optimizes your trained neural networks for runtime performance and delivers GPU-accelerated services for data center, embedded and automotive applications.\n\nThe NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks. Deep learning developers and researchers worldwide rely on the highly optimized routines in cuDNN which allow them to focus on designing and training neural network models rather than spending time on low-level performance tuning.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_TENSORRT_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "5.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P3310/libnvinfer5_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "libnvinfer5_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 32122128, 
                            "checksum": "b3f083e0665dc8d3d8eb61349bb275d7", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 33132012, 
                            "checksum": "9e8e0d8356ba4af730c39b35c50ae2a8", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/libnvinfer-samples_5.0.6-1+cuda10.0_all.deb", 
                            "fileName": "libnvinfer-samples_5.0.6-1+cuda10.0_all.deb", 
                            "size": 473024696, 
                            "checksum": "dfa8bee28c87ec3c08b4063b779d63ef", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/tensorrt_5.0.6.3-1+cuda10.0_arm64.deb", 
                            "fileName": "tensorrt_5.0.6.3-1+cuda10.0_arm64.deb", 
                            "size": 1591868, 
                            "checksum": "c7a9fe100fa55f2366a52909b8f55226", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/python-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 633380, 
                            "checksum": "9e05650a9517824e6b20dc94ebeef03c", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/python-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 2296, 
                            "checksum": "2e36bad9713b20ced5ec01e987f6395e", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/python3-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python3-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 633388, 
                            "checksum": "966128fdae61f5b2b753762d0dd74759", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/python3-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python3-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 2300, 
                            "checksum": "98d11ff195c93e2e04c49171b9200691", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/graphsurgeon-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "graphsurgeon-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 14392, 
                            "checksum": "336ca4f5b94d973ec751a7a12824655f", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3310/uff-converter-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "uff-converter-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 34836, 
                            "checksum": "8569488be7fd0ee33f2c24f9f29e103e", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_TX2_COMP", 
                            "operator": "==", 
                            "ver": "7.3"
                        }, 
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "operator": ">=", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_TENSORRT_TARGET_POST_INSTALL_XAVIER_COMP": {
            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_XAVIER_COMP", 
            "name": "TensorRT on Target", 
            "description": "NVIDIA TensorRT is a high-performance deep learning inference for production deployment of deep learning applications. It optimizes your trained neural networks for runtime performance and delivers GPU-accelerated services for data center, embedded and automotive applications.\n\nThe NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks. Deep learning developers and researchers worldwide rely on the highly optimized routines in cuDNN which allow them to focus on designing and training neural network models rather than spending time on low-level performance tuning.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_TENSORRT_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "5.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P2888/libnvinfer5_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "libnvinfer5_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 32210580, 
                            "checksum": "70526ede410bca53d7f6ce60e082178b", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 33108812, 
                            "checksum": "b28b9283c3d02282cc5670988de1fbe8", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/libnvinfer-samples_5.0.6-1+cuda10.0_all.deb", 
                            "fileName": "libnvinfer-samples_5.0.6-1+cuda10.0_all.deb", 
                            "size": 472933008, 
                            "checksum": "aa6d4a5ced259a714fe73baf4ce46061", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/tensorrt_5.0.6.3-1+cuda10.0_arm64.deb", 
                            "fileName": "tensorrt_5.0.6.3-1+cuda10.0_arm64.deb", 
                            "size": 1591864, 
                            "checksum": "6b9f36d9fd382576605c95fe9d3e744b", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/python-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 634456, 
                            "checksum": "5229e27def0022d5de32582437a8e5a5", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/python-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 2296, 
                            "checksum": "b5c0812db5b560f6f5da64e5a59f464d", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/python3-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python3-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 634460, 
                            "checksum": "a3644cb618ca6b1148fa3517a8450e62", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/python3-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python3-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 2300, 
                            "checksum": "376ef649841d1347e4ddfdb8b323d084", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/graphsurgeon-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "graphsurgeon-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 14392, 
                            "checksum": "0fac7150098e3dfd921e353067e95dd3", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P2888/uff-converter-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "uff-converter-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 34852, 
                            "checksum": "c1592b4bd7c56a3b5ec883e8e846d9bf", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P2888"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_XAVIER_COMP", 
                            "operator": "==", 
                            "ver": "7.3"
                        }, 
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "operator": ">=", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_TENSORRT_TARGET_POST_INSTALL_NANO_COMP": {
            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_NANO_COMP", 
            "name": "TensorRT on Target", 
            "description": "NVIDIA TensorRT is a high-performance deep learning inference for production deployment of deep learning applications. It optimizes your trained neural networks for runtime performance and delivers GPU-accelerated services for data center, embedded and automotive applications.\n\nThe NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks. Deep learning developers and researchers worldwide rely on the highly optimized routines in cuDNN which allow them to focus on designing and training neural network models rather than spending time on low-level performance tuning.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_TENSORRT_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "5.0", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P3448-0000/libnvinfer5_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "libnvinfer5_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 32122128, 
                            "checksum": "b3f083e0665dc8d3d8eb61349bb275d7", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 33132012, 
                            "checksum": "9e8e0d8356ba4af730c39b35c50ae2a8", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/libnvinfer-samples_5.0.6-1+cuda10.0_all.deb", 
                            "fileName": "libnvinfer-samples_5.0.6-1+cuda10.0_all.deb", 
                            "size": 473024696, 
                            "checksum": "dfa8bee28c87ec3c08b4063b779d63ef", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/tensorrt_5.0.6.3-1+cuda10.0_arm64.deb", 
                            "fileName": "tensorrt_5.0.6.3-1+cuda10.0_arm64.deb", 
                            "size": 1591868, 
                            "checksum": "c7a9fe100fa55f2366a52909b8f55226", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/python-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 633380, 
                            "checksum": "9e05650a9517824e6b20dc94ebeef03c", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/python-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 2296, 
                            "checksum": "2e36bad9713b20ced5ec01e987f6395e", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/python3-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python3-libnvinfer_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 633388, 
                            "checksum": "966128fdae61f5b2b753762d0dd74759", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/python3-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "python3-libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 2300, 
                            "checksum": "98d11ff195c93e2e04c49171b9200691", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/graphsurgeon-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "graphsurgeon-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 14392, 
                            "checksum": "336ca4f5b94d973ec751a7a12824655f", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "P3448-0000/uff-converter-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "fileName": "uff-converter-tf_5.0.6-1+cuda10.0_arm64.deb", 
                            "size": 34836, 
                            "checksum": "8569488be7fd0ee33f2c24f9f29e103e", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_CUDNN_TARGET_POST_INSTALL_NANO_COMP", 
                            "operator": "==", 
                            "ver": "7.3"
                        }, 
                        {
                            "id": "NV_L4T_CUDA_TARGET_POST_INSTALL_COMP", 
                            "operator": ">=", 
                            "ver": "10.0"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_L4T_VISIONWORKS_TARGET_POST_INSTALL_COMP": {
            "id": "NV_L4T_VISIONWORKS_TARGET_POST_INSTALL_COMP", 
            "name": "VisionWorks on Target", 
            "description": "NVIDIA VisionWorks Toolkit is a CUDA accelerated software development package for computer vision (CV) and image processing. The toolkit is designed to provide a production-quality, standard interface that implements and extends the OpenVX standard, enabling high performance computer vision applications on NVIDIA Tegra devices.", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_VISIONWORKS_OPENCV_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": false, 
            "versions": [
                {
                    "version": "1.6", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "/libvisionworks-repo_1.6.0.500n_arm64.deb", 
                            "fileName": "libvisionworks-repo_1.6.0.500n_arm64.deb", 
                            "size": 60780704, 
                            "checksum": "e70d49ff115bc5782a3d07b572b5e3c0", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}} \" 5", 
                                                "sleep 5", 
                                                "safe_apt_install \"sudo apt-key add /var/visionworks-repo/GPGKEY\" 5", 
                                                "sleep 2", 
                                                "safe_apt_install \"sudo apt-get update\" 5", 
                                                "safe_apt_install \"sudo apt-get install -y --allow-unauthenticated libvisionworks libvisionworks-dev libvisionworks-samples\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/libvisionworks-sfm-repo_0.90.4_arm64.deb", 
                            "fileName": "libvisionworks-sfm-repo_0.90.4_arm64.deb", 
                            "size": 20216850, 
                            "checksum": "647b0ae86a00745fc6d211545a9fcefe", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sleep 2", 
                                                "safe_apt_install \"sudo apt-key add /var/visionworks-sfm-repo/GPGKEY\" 5", 
                                                "sleep 2", 
                                                "safe_apt_install \"sudo apt-get update\" 5", 
                                                "safe_apt_install \"sudo apt-get install -y --allow-unauthenticated libvisionworks-sfm libvisionworks-sfm-dev\" 5", 
                                                "/usr/share/visionworks-sfm/sources/install-samples.sh ~/ ; sleep 0.5; cd ~/VisionWorks-SFM-*-Samples/; make", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        {
                            "url": "/libvisionworks-tracking-repo_0.88.2_arm64.deb", 
                            "fileName": "libvisionworks-tracking-repo_0.88.2_arm64.deb", 
                            "size": 13107966, 
                            "checksum": "7630f0309c883cc6d8a1ab5a712938a5", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "function safe_apt_install {", 
                                                "    echo \"*begin $1, $2\"", 
                                                "    tmp_log=/tmp/jetpack_dpkg_log.txt", 
                                                "    sudo rm -f $tmp_log", 
                                                "    set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "    while [ ${CMD_STATUS} -ne 0 ]; do", 
                                                "        if grep -q -e \"is locked by another process\" -e \"E: Could not get lock /var/lib\" $tmp_log; then", 
                                                "           sudo rm -f $tmp_log", 
                                                "           set +e; $1 2>&1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e", 
                                                "           echo \"Waiting $2 seconds for apt to be available\"; sleep ${2}", 
                                                "        else", 
                                                "           echo \"Unhandled error when running $1\"; exit 1", 
                                                "        fi", 
                                                "    done", 
                                                "}", 
                                                "safe_apt_install \"sudo dpkg -i /opt/nvidia/deb_repos/{{FILE_NAME}}\" 5", 
                                                "sleep 1", 
                                                "safe_apt_install \"sudo apt-key add /var/visionworks-tracking-repo/GPGKEY\" 5", 
                                                "sleep 1", 
                                                "safe_apt_install \"sudo apt-get update\" 5", 
                                                "safe_apt_install \"sudo apt-get install -y --allow-unauthenticated libvisionworks-tracking libvisionworks-tracking-dev\" 5", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000", 
                        "P2888", 
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_OPENCV_TARGET_POST_INSTALL_COMP", 
                            "operator": "==", 
                            "ver": "3.3.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_TX2_COMP": {
            "id": "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_TX2_COMP", 
            "name": "Multimedia API", 
            "description": "Multimedia API offers developers to use the lower level APIs for flexible application development. This is in addition to the Gstreamer framework available from the previous releases.\nThe APIs include Argus API for imaging applications and V4L2 for encode, decode, scaling and other media functions. These lower level APIs provide a better control over the underlying hardware blocks. ", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P3310/Tegra_Multimedia_API_R32.1.0_aarch64.tbz2", 
                            "fileName": "Tegra_Multimedia_API_R32.1.0_aarch64.tbz2", 
                            "size": 70326842, 
                            "checksum": "bf7225ab1f3373328c0def240bc6cec2", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "rm -rf ~/tegra_multimedia_api; cd ~;", 
                                                "tar xjvf /opt/nvidia/deb_repos/{{FILE_NAME}}", 
                                                "# Per bug http://nvbugs/200370228, add WAR to support CUDA GLES sample compilation", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/EGL /usr/include/", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/GLES* /usr/include/", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/KHR /usr/include/", 
                                                "# http://nvbugs/2348090: MMAPI installation steps update.", 
                                                "cd /usr/lib/aarch64-linux-gnu; ", 
                                                "sudo ln -sf libv4l2.so.0 libv4l2.so", 
                                                "sudo rm -rf /usr/src/tegra_multimedia_api", 
                                                "sudo cp -r ~/tegra_multimedia_api/ /usr/src/", 
                                                "rm -rf ~/tegra_multimedia_api; ", 
                                                "cd /usr/src/tegra_multimedia_api", 
                                                "PATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/lib64 TEGRA_ARMABI=aarch64-linux-gnu sudo make 2>&1", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3310", 
                        "P3489-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_TX2_COMP", 
                            "operator": "==", 
                            "ver": "5.0"
                        }, 
                        {
                            "id": "NV_L4T_OPENCV_TARGET_POST_INSTALL_COMP", 
                            "operator": "==", 
                            "ver": "3.3.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_XAVIER_COMP": {
            "id": "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_XAVIER_COMP", 
            "name": "Multimedia API", 
            "description": "Multimedia API offers developers to use the lower level APIs for flexible application development. This is in addition to the Gstreamer framework available from the previous releases.\nThe APIs include Argus API for imaging applications and V4L2 for encode, decode, scaling and other media functions. These lower level APIs provide a better control over the underlying hardware blocks. ", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P2888/Tegra_Multimedia_API_R32.1.0_aarch64.tbz2", 
                            "fileName": "Tegra_Multimedia_API_R32.1.0_aarch64.tbz2", 
                            "size": 70326842, 
                            "checksum": "bf7225ab1f3373328c0def240bc6cec2", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "rm -rf ~/tegra_multimedia_api; cd ~;", 
                                                "tar xjvf /opt/nvidia/deb_repos/{{FILE_NAME}}", 
                                                "# Per bug http://nvbugs/200370228, add WAR to support CUDA GLES sample compilation", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/EGL /usr/include/", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/GLES* /usr/include/", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/KHR /usr/include/", 
                                                "# http://nvbugs/2348090: MMAPI installation steps update.", 
                                                "cd /usr/lib/aarch64-linux-gnu; ", 
                                                "sudo ln -sf libv4l2.so.0 libv4l2.so", 
                                                "sudo rm -rf /usr/src/tegra_multimedia_api", 
                                                "sudo cp -r ~/tegra_multimedia_api/ /usr/src/", 
                                                "rm -rf ~/tegra_multimedia_api; ", 
                                                "cd /usr/src/tegra_multimedia_api", 
                                                "PATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/lib64 TEGRA_ARMABI=aarch64-linux-gnu sudo make 2>&1", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P2888"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_XAVIER_COMP", 
                            "operator": "==", 
                            "ver": "5.0"
                        }, 
                        {
                            "id": "NV_L4T_OPENCV_TARGET_POST_INSTALL_COMP", 
                            "operator": "==", 
                            "ver": "3.3.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }, 
        "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_NANO_COMP": {
            "id": "NV_MULTIMEDIA_API_TARGET_POST_INSTALL_NANO_COMP", 
            "name": "Multimedia API", 
            "description": "Multimedia API offers developers to use the lower level APIs for flexible application development. This is in addition to the Gstreamer framework available from the previous releases.\nThe APIs include Argus API for imaging applications and V4L2 for encode, decode, scaling and other media functions. These lower level APIs provide a better control over the underlying hardware blocks. ", 
            "compType": "target", 
            "isVisible": true, 
            "licenseId": "NV_JETPACK_OS_EULA", 
            "isDetectableInstall": false, 
            "isInstallPathCustomizable": true, 
            "versions": [
                {
                    "version": "32.1", 
                    "operatingSystems": [
                        "ubuntu1604", 
                        "ubuntu1804"
                    ], 
                    "installSizeMB": 0, 
                    "downloadFiles": [
                        {
                            "url": "P3448-0000/Tegra_Multimedia_API_R32.1.0_aarch64.tbz2", 
                            "fileName": "Tegra_Multimedia_API_R32.1.0_aarch64.tbz2", 
                            "size": 70327205, 
                            "checksum": "00979fd8a30ae5d49152d229465614e9", 
                            "checksumType": "md5", 
                            "installParameters": {
                                "installType": "cmd", 
                                "additionalParameters": {
                                    "installCommands": [
                                        {
                                            "remoteExecBash": [
                                                "sudo mkdir -p /opt/nvidia/deb_repos", 
                                                "sudo chmod 777 /opt/nvidia/deb_repos", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }, 
                                        {
                                            "userCommand": "scp -F /dev/null -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=5 -r {{FILE_PATH}}  {{TARGET_USERNAME}}@{{TARGET_IP}}:/opt/nvidia/deb_repos/"
                                        }, 
                                        {
                                            "remoteExecBash": [
                                                "rm -rf ~/tegra_multimedia_api; cd ~;", 
                                                "tar xjvf /opt/nvidia/deb_repos/{{FILE_NAME}}", 
                                                "# Per bug http://nvbugs/200370228, add WAR to support CUDA GLES sample compilation", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/EGL /usr/include/", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/GLES* /usr/include/", 
                                                "sudo cp -rf ~/tegra_multimedia_api/include/KHR /usr/include/", 
                                                "# http://nvbugs/2348090: MMAPI installation steps update.", 
                                                "cd /usr/lib/aarch64-linux-gnu; ", 
                                                "sudo ln -sf libv4l2.so.0 libv4l2.so", 
                                                "sudo rm -rf /usr/src/tegra_multimedia_api", 
                                                "sudo cp -r ~/tegra_multimedia_api/ /usr/src/", 
                                                "rm -rf ~/tegra_multimedia_api; ", 
                                                "cd /usr/src/tegra_multimedia_api", 
                                                "PATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/lib64 TEGRA_ARMABI=aarch64-linux-gnu sudo make 2>&1", 
                                                "sudo rm -f /opt/nvidia/deb_repos/{{FILE_NAME}}"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ], 
                    "targetIds": [
                        "P3448-0000"
                    ], 
                    "dependencies": [
                        {
                            "id": "NV_L4T_TENSORRT_TARGET_POST_INSTALL_NANO_COMP", 
                            "operator": "==", 
                            "ver": "5.0"
                        }, 
                        {
                            "id": "NV_L4T_OPENCV_TARGET_POST_INSTALL_COMP", 
                            "operator": "==", 
                            "ver": "3.3.1"
                        }
                    ], 
                    "external_dependencies": []
                }
            ]
        }
    }, 
    "externals": {}, 
    "licenses": {
        "NV_JETPACK_CUDA_EULA": {
            "id": "NV_JETPACK_CUDA_EULA", 
            "name": "Software License Agreement for CUDA", 
            "url": "NV_JETPACK_CUDA_EULA.txt"
        }, 
        "NV_JETPACK_CUDNN_EULA": {
            "id": "NV_JETPACK_CUDNN_EULA", 
            "name": "Software License Agreement for cuDNN", 
            "url": "NV_JETPACK_CUDNN_EULA.txt"
        }, 
        "NV_JETPACK_OS_EULA": {
            "id": "NV_JETPACK_OS_EULA", 
            "name": "Software License Agreement for OS", 
            "url": "NV_JETPACK_OS_EULA.txt"
        }, 
        "NV_COMMON_EULA": {
            "id": "NV_COMMON_EULA", 
            "name": "Software License Agreement for Developer Tools", 
            "url": "NV_COMMON_EULA.txt"
        }, 
        "NV_JETPACK_TENSORRT_EULA": {
            "id": "NV_JETPACK_TENSORRT_EULA", 
            "name": "Software License Agreement for TensorRT", 
            "url": "NV_JETPACK_TENSORRT_EULA.txt"
        }, 
        "NV_JETPACK_VISIONWORKS_OPENCV_EULA": {
            "id": "NV_JETPACK_VISIONWORKS_OPENCV_EULA", 
            "name": "Software License Agreement for OpenCV and VisionWorks", 
            "url": "NV_JETPACK_VISIONWORKS_OPENCV_EULA.txt"
        }
    }
}